{"version":3,"file":"static/js/314.d2b4277b.chunk.js","mappings":"kOAEaA,EAAOC,EAAAA,GAAAA,KAAH,iSAYJC,EAAYD,EAAAA,GAAAA,MAAH,uIAQTE,EAAYF,EAAAA,GAAAA,MAAH,0JASTG,EAAaH,EAAAA,GAAAA,OAAH,kW,mBCzBR,SAASI,EAAaC,GACnC,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACAC,QAAQC,IAAIP,GACZM,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,GAIZ,IAAMI,EAAe,SAAAC,GAEnB,MAAwBA,EAAMC,cAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACH,OAAOC,EAAQU,GACjB,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GACZ,MACF,QACE,SAWAC,EAAY,WAChBX,EAAQ,IACRE,EAAS,IACTE,EAAY,KAGd,OACE,UAACb,EAAD,CAAMqB,SAda,SAAAC,GACnBA,EAAEC,iBACFT,QAAQC,IAAIL,EAAOE,GAEnBQ,KAU8BI,aAAa,MAA3C,WACE,UAACtB,EAAD,qBAEE,SAACC,EAAD,CACEsB,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUV,EACVW,MAAM,yIAENC,UAAQ,EACRC,YAAY,wBAGhB,mBACA,UAAC3B,EAAD,sBAEE,SAACC,EAAD,CACEsB,KAAK,QACLjB,KAAK,QACLW,MAAOT,EACPgB,SAAUV,EACVY,UAAQ,EACRC,YAAY,yBAIhB,mBACA,UAAC3B,EAAD,yBAEE,SAACC,EAAD,CACEsB,KAAK,WACLjB,KAAK,WACLW,MAAOP,EACPc,SAAUV,EAIVY,UAAQ,EAERE,UAAU,KACVC,UAAU,IACVF,YAAY,kDAGhB,SAACzB,EAAD,CAAYqB,KAAK,SAAjB,wB,sBC1FOO,EAAY/B,EAAAA,GAAAA,IAAH,4NASTgC,EAAwBhC,EAAAA,GAAAA,IAAH,8QAWrBiC,EAAoBjC,EAAAA,GAAAA,IAAH,mVASJkC,GAIbC,EAAQnC,EAAAA,GAAAA,GAAH,mICdH,SAASoC,IA2BtB,OACE,SAACL,EAAD,WAME,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACE,EAAD,kMAGF,SAAC/B,EAAD,W","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","views/RegisterView/RegisterView.styled.js","views/RegisterView/RegisterView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n  /* border: 2px solid blue; */\n  border-radius: 10px;\n  padding: 15px;\n  text-transform: capitalize;\n  box-shadow: 5px 5px 20px 0px #30ebfc;\n  background: linear-gradient(lightblue, lightyellow);\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 20px;\n  display: flex;\n  justify-content: space-between;\n  font-weight: bold;\n  color: blue;\n`;\n\nexport const FormInput = styled.input`\n  width: 70%;\n  margin-left: 20px;\n  height: 28px;\n  font-size: 14px;\n  color: blue;\n  border: 2px solid rgb(234, 255, 47);\n`;\n\nexport const FormButton = styled.button`\n  margin-top: 44px;\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 18px;\n  width: max-content;\n  /* height: 44px; */\n  padding: 5px;\n  color: rgb(19, 61, 248);\n  background-color: rgb(234, 255, 47);\n  border: 3px solid yellow;\n  box-shadow: 5px 5px 20px 5px #30ebfc;\n  border-radius: 10px;\n`;\n","import './RegisterForm.styled';\nimport { Form, FormLabel, FormInput, FormButton } from './RegisterForm.styled';\nimport { useState } from 'react';\n// import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport default function RegisterForm(props) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  console.log(name);\n  console.log(email);\n  console.log(password);\n\n  // const dispatch = useDispatch();\n\n  const handleChange = event => {\n    // console.log(event);\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(email, password);\n    // props.onSubmit({ email, password });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormLabel>\n        Name :\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter your name\"\n        />\n      </FormLabel>\n      <br />\n      <FormLabel>\n        Email :\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          required\n          placeholder=\"name@example.com\"\n          // placeholder=\"Enter your email\"\n        />\n      </FormLabel>\n      <br />\n      <FormLabel>\n        Password :\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          // pattern=\"{ '9': '[0-9]', 'a': '[A-Za-z]', '*': '[A-Za-z0-9]' }\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          // title=\"Password must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          // autocomplete\n          maxlength=\"14\"\n          minlength=\"6\"\n          placeholder=\"Password must be min 6 and max 14 symbols\"\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Sign up</FormButton>\n    </Form>\n  );\n}\nRegisterForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport ballons from './ballons.jpg';\nexport const Container = styled.div`\n  min-height: calc(100vh - 50px);\n  display: flex;\n  /* flex-direction: column; */\n  align-items: center;\n  justify-content: center;\n\n  background: linear-gradient(lightblue, lightyellow);\n`;\nexport const RegisterFormContainer = styled.div`\n  /* width: 70%; */\n  /* min-height: calc(80vh - 0px); */\n  padding: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  border-radius: 10px;\n  background-color: #fff;\n  box-shadow: 5px 5px 20px 0px #30ebfc;\n`;\nexport const WellcomeContainer = styled.div`\n  width: calc(20vw - 0px);\n  min-height: calc(50vh - 0px);\n  display: flex;\n  align-items: center;\n  margin-right: 30px;\n  /* justify-content: center; */\n  border-radius: 10px;\n  background-size: cover;\n  background-image: url(${ballons});\n  background-repeat: no-repeat;\n  box-shadow: 5px 5px 20px 0px #30ebfc;\n`;\nexport const Title = styled.h1`\n  font-weight: 500;\n  font-size: 48px;\n  text-align: center;\n  color: #30ebfc;\n  margin-bottom: 30px;\n`;\n","// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { authOperations } from '../redux/auth';\nimport RegisterForm from '../../components/RegisterForm';\nimport {\n  Container,\n  Title,\n  RegisterFormContainer,\n  WellcomeContainer,\n} from './RegisterView.styled';\n// const styles = {\n//   form: {\n//     width: 320,\n//   },\n//   label: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     marginBottom: 15,\n//   },\n// };\n\nexport default function RegisterView() {\n  // const dispatch = useDispatch();\n  // const [name, setName] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n\n  // const handleChange = ({ target: { name, value } }) => {\n  //   switch (name) {\n  //     case 'name':\n  //       return setName(value);\n  //     case 'email':\n  //       return setEmail(value);\n  //     case 'password':\n  //       return setPassword(value);\n  //     default:\n  //       return;\n  //   }\n  // };\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   dispatch(authOperations.register({ name, email, password }));\n  //   setName('');\n  //   setEmail('');\n  //   setPassword('');\n  // };\n\n  return (\n    <Container>\n      {/* <WellcomeContainer>\n        <Title>Сторінка реєстрації користувача</Title>\n        {/* <h1>Страница регистрации</h1> */}\n      {/* </WellcomeContainer> */}\n\n      <RegisterFormContainer>\n        <WellcomeContainer>\n          <Title>Сторінка реєстрації користувача</Title>\n          {/* <h1>Страница регистрации</h1> */}\n        </WellcomeContainer>\n        <RegisterForm />\n      </RegisterFormContainer>\n\n      {/* <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          E-Mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label> */}\n\n      {/* <button type=\"submit\">Sing up</button> */}\n      {/* </form> */}\n    </Container>\n  );\n}\n"],"names":["Form","styled","FormLabel","FormInput","FormButton","RegisterForm","props","useState","name","setName","email","setEmail","password","setPassword","console","log","handleChange","event","currentTarget","value","resetForm","onSubmit","e","preventDefault","autoComplete","type","onChange","title","required","placeholder","maxlength","minlength","Container","RegisterFormContainer","WellcomeContainer","ballons","Title","RegisterView"],"sourceRoot":""}