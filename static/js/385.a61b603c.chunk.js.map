{"version":3,"file":"static/js/385.a61b603c.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","views/ContactsView/ContactsView.styled.js","views/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n  /* border: 2px solid blue; */\n  border-radius: 10px;\n  padding: 15px;\n  text-transform: capitalize;\n  box-shadow: 5px 5px 20px 0px #30ebfc;\n  background: linear-gradient(lightblue, lightyellow);\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 20px;\n  display: flex;\n  justify-content: space-between;\n  font-weight: bold;\n  color: blue;\n`;\n\nexport const FormInput = styled.input`\n  width: 70%;\n  margin-left: 20px;\n  height: 28px;\n  font-size: 14px;\n  color: blue;\n  border: 2px solid rgb(234, 255, 47);\n`;\n\nexport const FormButton = styled.button`\n  margin-top: 44px;\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 18px;\n  width: max-content;\n  /* height: 44px; */\n  padding: 5px;\n  color: rgb(19, 61, 248);\n  background-color: rgb(234, 255, 47);\n  border: 3px solid yellow;\n  box-shadow: 5px 5px 20px 5px #30ebfc;\n  border-radius: 10px;\n`;\n","import './LoginForm.styled.js';\nimport {\n  ContactForm,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './LoginForm.styled';\nimport { useState } from 'react';\n// import PropTypes from 'prop-types';\n\nexport default function LoginForm(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  console.log(email);\n  console.log(password);\n  const handleChange = event => {\n    // console.log(event);\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(email, password);\n    // props.onSubmit({ email, password });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <ContactForm onSubmit={handleSubmit}>\n      <FormLabel>\n        Email :\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter your email\"\n        />\n      </FormLabel>\n      <br />\n      <FormLabel>\n        Password :\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          // pattern=\"{ '9': '[0-9]', 'a': '[A-Za-z]', '*': '[A-Za-z0-9]' }\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          // title=\"Password must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          // autocomplete\n          maxlength=\"14\"\n          minlength=\"6\"\n          placeholder=\"Password must be min 6 and max 14 symbols\"\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Log in</FormButton>\n    </ContactForm>\n  );\n}\n// LoginForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  font-size: 20px;\n  padding: 10px;\n  margin-bottom: 15px;\n  margin-top: 0;\n`;\nexport const ContactListItem = styled.li`\n  display: flex;\n  /* align-items: baseline; */\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Contact = styled.p`\n  width: 80%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ContactListName = styled.span`\n  color: darkblue;\n  display: flex;\n`;\n\nexport const ContactListNumber = styled.span`\n  color: darkcyan;\n  display: flex;\n`;\n\nexport const ContactListButton = styled.button`\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 18px;\n  width: max-content;\n  /* height: 44px; */\n  padding: 5px;\n  /* margin-left: 30px; */\n  color: rgb(19, 61, 248);\n  background-color: rgb(234, 255, 47);\n  border: 3px solid darkslateblue;\n  border-radius: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactList.styled.js';\nimport {\n  List,\n  ContactListItem,\n  ContactListNumber,\n  ContactListName,\n  Contact,\n  ContactListButton,\n} from './ContactList.styled';\n\n// const ContactList = ({ contacts, onDeleteContactList }) => (\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <List>\n    {contacts.map(({ name, phone, id }) => (\n      <ContactListItem key={id}>\n        <Contact>\n          <ContactListName> {name} : </ContactListName>\n          <ContactListNumber> {phone} </ContactListNumber>\n        </Contact>\n        <ContactListButton type=\"button\" onClick={() => onDeleteContact(id)}>\n          Delete\n        </ContactListButton>\n      </ContactListItem>\n    ))}\n  </List>\n);\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  font-size: 22px;\n  text-transform: capitalize;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: bold;\n  color: blue;\n  margin-top: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  height: 28px;\n  font-size: 14px;\n  color: blue;\n  border: 2px solid rgb(234, 255, 47);\n`;\n","import React from 'react';\nimport './Filter.styled.js';\nimport { FilterLabel, FilterInput } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <FilterLabel>\n      Find contacts by name :\n      <FilterInput type=\"text\" value={value} onChange={onChange} />\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 630px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: 22px;\n  text-transform: uppercase;\n  color: blue;\n  background: linear-gradient(lightblue, lightyellow);\n  padding: 15px;\n`;\n","import Form from '../../components/LoginForm';\nimport ContactList from '../../components/ContactList';\nimport Spinner from '../../components/Spinner';\nimport Filter from '../../components/Filter';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Container } from './ContactsView.styled';\n// import './container.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from '../../redux/filterSlice';\nimport {\n  useFetchContactsQuery,\n  useDeleteContactsMutation,\n  useCreateContactsMutation,\n} from 'redux/itemsSlice';\n\nexport default function ContactsView() {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  // хуки з ітемс-слайсу\n  const { data, isFetching } = useFetchContactsQuery();\n  const [deleteItem] = useDeleteContactsMutation();\n  const [newContact] = useCreateContactsMutation();\n\n  // функція для додавання нового контакту\n  const addContact = ({ name, phone }) => {\n    const contact = {\n      name,\n      phone,\n    };\n    // якщо контакт існуе - даемо nоnеpедження\n    if (data.some(contact => contact.name === name)) {\n      return toast.info(`${contact.name}   is   already in contacts`);\n    }\n    // якщо контакт новий - добавляeмо його до сnиску контактів,\n    //  викоpистовумо хук зі слайсу для відобpаження нового ствоpеного контакту\n    newContact(contact);\n  };\n\n  // функція для збеpігання значення в nолі nошуку\n  const changeFilter = e => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  // функція для відобpаження отфільтpованих контактів\n  const getVisibleContacts = () => {\n    const normalizedFilter = value.toLowerCase();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form onSubmit={addContact} />\n      <ToastContainer\n        position={'top-center'}\n        autoClose={3000}\n        theme={'colored'}\n      />\n      <h2> Contacts : </h2>\n      <Filter value={value} onChange={changeFilter} />\n      {/* nід час виконання заnиту кpутиться сnінеp */}\n      {isFetching && <Spinner />}\n      {/*коли npийшли вже дані з бекенду, то pендеимо сnисок контактів */}\n      {data && (\n        <ContactList\n          contacts={getVisibleContacts()}\n          onDeleteContact={deleteItem}\n        />\n      )}\n    </Container>\n  );\n}\n"],"names":["ContactForm","styled","FormLabel","FormInput","FormButton","LoginForm","props","useState","email","setEmail","password","setPassword","console","log","handleChange","event","currentTarget","name","value","resetForm","onSubmit","e","preventDefault","type","onChange","required","placeholder","maxlength","minlength","List","ContactListItem","Contact","ContactListName","ContactListNumber","ContactListButton","contacts","onDeleteContact","map","phone","id","onClick","FilterLabel","FilterInput","Container","ContactsView","useSelector","state","filter","dispatch","useDispatch","useFetchContactsQuery","data","isFetching","useDeleteContactsMutation","deleteItem","useCreateContactsMutation","newContact","contact","some","toast","position","autoClose","theme","updateFilter","Spinner","normalizedFilter","toLowerCase","includes","getVisibleContacts"],"sourceRoot":""}